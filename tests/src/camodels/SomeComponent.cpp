/*
 * Component implementation template for 'camodels.SomeComponent'.
 * WARNING: remember to copy this file to your project dir before you begin to change it.
 * Generated by the Coral Compiler v0.8.0 on Thu Jul 05 18:51:47 2012.p
 */

#include "SomeComponent_Base.h"
#include <camodels/SomeStruct.h>
#include <erm/IModel.h>

namespace camodels {

class SomeComponent : public SomeComponent_Base
{
public:
	SomeComponent()
	{
		// empty constructor
	}

	virtual ~SomeComponent()
	{
		// empty destructor
	}

	// ------ camodels.SomeInterface Methods ------ //

	const co::Any& getAny1()
	{
		return _any1;
	}

	void setAny1( const co::Any& any1 )
	{
		_any1 = any1;
	}

	camodels::SomeInterface* getAutoRef()
	{
		return _autoRef.get();
	}

	void setAutoRef( camodels::SomeInterface* autoRef )
	{
		_autoRef = autoRef;
	}

	co::int8 getByte1()
	{
		return _byte1;
	}

	void setByte1( co::int8 byte1 )
	{
		_byte1 = byte1;
	}

	camodels::SomeEnum getEnum1()
	{
		return _enum1;
	}

	void setEnum1( camodels::SomeEnum enum1 )
	{
		_enum1 = enum1;
	}

	erm::IModel* getExternal()
	{
		return _external.get();
	}

	void setExternal( erm::IModel* external )
	{
		_external = external;
	}

	co::int8 getReadOnlyByte()
	{
		return _readOnlyByte;
	}

	const camodels::SomeStruct& getReadOnlyStruct()
	{
		return _readOnlyStruct;
	}

	const std::string& getStr1()
	{
		return _str1;
	}

	void setStr1( const std::string& str1 )
	{
		_str1 = str1;
	}

	co::Range<std::string const> getStrArray()
	{
		return _strArray;
	}

	void setStrArray( co::Range<std::string const> strArray )
	{
		co::assign( strArray, _strArray );
	}

	const camodels::SomeStruct& getStruct1()
	{
		return _struct1;
	}

	void setStruct1( const camodels::SomeStruct& struct1 )
	{
		_struct1 = struct1;
	}

private:
	// member variables
	co::Any _any1;
	co::RefPtr<camodels::SomeInterface> _autoRef;
	co::int8 _byte1;
	camodels::SomeEnum _enum1;
	co::RefPtr<erm::IModel> _external;
	co::int8 _readOnlyByte;
	camodels::SomeStruct _readOnlyStruct;
	std::string _str1;
	std::vector<std::string> _strArray;
	camodels::SomeStruct _struct1;
};

CORAL_EXPORT_COMPONENT( SomeComponent, SomeComponent );

} // namespace camodels
