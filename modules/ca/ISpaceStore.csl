interface ISpaceStore
{
	readonly uint32 latestRevision;
	
	void open() raises ca.IOException;
	void close() raises ca.IOException;

	void beginChanges();
	void commitChanges( in string updates );
	void discardChanges();
	
	//returns the root object's id for the current revision
	uint32 getRootObject( in uint32 revision );
	void getUpdates( in uint32 revision, out string updates );
	
	uint32 getOrAddType( in string typeName, in uint32 version ) raises ca.IOException;
	uint32 addField( in uint32 typeId, in string fieldName, in uint32 fieldTypeId, in bool isFacet ) raises ca.IOException;
	
	uint32 addObject( in uint32 typeId, in string typeName ) raises ca.IOException;
	uint32 addService( in uint32 typeId, in string typeName, in uint32 providerId ) raises ca.IOException;
	
	void addValues( in uint32 objectId, in StoredFieldValue[] values ) raises ca.IOException;
	uint32 getObjectType( in uint32 objectId, out string typeName ) raises ca.IOException;
	
	void getType( in uint32 typeId, out StoredType storedType ) raises ca.IOException;
	void getValues( in uint32 objectId, in uint32 revision, out ca.StoredFieldValue[] values ) raises ca.IOException;
	
	uint32 getServiceProvider( in uint32 serviceId );
};