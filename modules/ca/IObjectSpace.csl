/*
	Manages a collection of object graphs that are mirrored in a remote data store.

	Objects are guaranteed to be unique within a single object space. However, they
	can be shared by multiple object spaces, or have copies in different object
	spaces in the same application.

	The object space has a central role in the life-cycle of its object graphs.

	An object space posts notifications at various points. For instance, when changes
	are detected for an object (or the whole graph), when.
 */
interface IObjectSpace
{
	// List of root objects in the object space.
	readonly attribute co.Component[] rootObjects;

	/*
		Adds a root object to the object space.

		This operation implicitly adds to the object space the whole graph of objects
		that are reachable from the root note, in accordance with the object model.

		\throw ObjectModelException if the root object's component type is not defined in the object model.
	 */
	void addRootObject( in co.Interface root )
		raises ObjectModelException;

	/*
		Removes a root object from the object space.

		This operation implicitly removes from the object space all objects that are
		no longer reachable through one of the remaining root nodes.

		\throw ObjectModelException if the root object's component type is not defined in the object model.
	 */
	void removeRootObject( in co.Interface root )
		raises ObjectModelException;

	void beginChange( in co.Interface object );
	void endChange();

	/*
		Resets the object space, removing all objects.
	 */
	void reset();
};
